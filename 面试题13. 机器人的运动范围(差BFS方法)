/* question

地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

 

示例 1：

输入：m = 2, n = 3, k = 1
输出：3
示例 2：

输入：m = 3, n = 1, k = 0
输出：1
提示：

1 <= n,m <= 100
0 <= k <= 20

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/


/* solution1

DFS
卡在了传值上，定义一些全局变量可以有效减少传值。
卡在了返回值上，其实也可以维护一个全局的变量记录总数。

时间：O(MN)
空间：O(MN)

class Solution {
public:
    int a[100][100] = {0};
    int movingCount(int m, int n, int k) {
        
        return dfs(m, n, k, 0, 0);
    }

    int dfs(int m, int n, int k, int i, int j)
    {
        if(i < 0 || i >= m || j < 0 || j >= n || a[i][j] == 1 || sum(i, j) > k)
            return 0;

        a[i][j] = 1;

        return 1 + dfs(m, n, k, i + 1, j) + dfs(m, n, k, i - 1, j) + 
                            dfs(m, n, k, i, j + 1) + dfs(m, n, k, i, j - 1);
    }

    int sum(int i, int j)
    {
        return (i / 100) + (i / 10 % 10) + (i % 10) + (j / 100) + (j / 10 % 10) + (j % 10);
    }

};

*/


/* solution2

BFS

*/
