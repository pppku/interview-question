/* question

输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。

 

示例：

输入：nums = [1,2,3,4]
输出：[1,3,2,4] 
注：[3,1,2,4] 也是正确的答案之一。
 

提示：

1 <= nums.length <= 50000
1 <= nums[i] <= 10000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

/* solution1 首尾指针法

class Solution {
public:
    vector<int> exchange(vector<int>& nums) {
        int head = 0;
        int end = nums.size() - 1;
        int tem;

        while(end > head)
        {
            while(head < nums.size() && nums[head] % 2 == 1) head++;
            while(end > -1 && nums[end] % 2 == 0) end--;

            if(head < end)
            {
                tem = nums[head];
                nums[head] = nums[end];
                nums[end] = tem;
                head++;
                end--;
            }
        }

        return nums;
    }
};


*/


/* solution2 快慢指针法

class Solution {
public:
    vector<int> exchange(vector<int>& nums) {
        int slow = 0;
        int fast = 0;

        while(fast < nums.size())
        {
            if(nums[fast] & 1 == 1)
            {
                swap(nums[slow], nums[fast]);
                slow++;
            }
            fast++;
           
        }

        return nums;
    }
};

*/
