/* question

输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。

 

示例 1：

输入：head = [1,3,2]
输出：[2,3,1]
 

限制：

0 <= 链表长度 <= 10000

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/

/* solution1

遍历链表，反转数组
时间O(N)
空间O(N)

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> reversePrint(ListNode* head) {
        vector<int> result;
        while(head != NULL)
        {
            result.push_back(head->val);
            head = head->next;
        }

        reverse(result.begin(), result.end());
        return result;
    }
};

*/


/* solution2
递归实现，递归到最后一位
实现从最后开始遍历
时间O(N)
空间O(N)

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> reversePrint(ListNode* head) {
        if(!head) 
            return {};
        
        vector<int> result = reversePrint(head->next);
        result.push_back(head->val);
        return result;
    }
};

*/
