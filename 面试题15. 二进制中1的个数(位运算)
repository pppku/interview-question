/* question

请实现一个函数，输入一个整数，输出该数二进制表示中 1 的个数。例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。

示例 1：

输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。
示例 2：

输入：00000000000000000000000010000000
输出：1
解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。
示例 3：

输入：11111111111111111111111111111101
输出：31
解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/er-jin-zhi-zhong-1de-ge-shu-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/


/* solution1

(n−1) 解析： 二进制数字 n 最右边的 1 变成 0 ，右边第一个 0 变成 1 。
n&(n−1) 解析： 左边没变化，n 右边第一个1变成了0。



class Solution {
public:
    int hammingWeight(uint32_t n) {

        int result = 0;

        while(n != 0)
        {
            n &= (n - 1);
            result++ ;
        }
        return result;
    }
};

*/


/* solution2

令n&1，记录结果为1的次数，再将n右移一位

class Solution {
public:
    int hammingWeight(uint32_t n) {

        int result = 0;

        while(n != 0)
        {
            result += n & 1;
            n >>= 1 ;
        }
        return result;
    }
};


*/
